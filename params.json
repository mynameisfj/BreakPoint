{
  "name": "Breakpoint",
  "tagline": "Objective-C版断点续传,https://github.com/whde/ResumeFromBreakPoint 为对应的Swift版本",
  "body": "# ResumeFromBreakPoint\r\n<p>Objective-C实现断点续传,Demo简单易懂,没有太多复杂模块和逻辑,完整体现断点续传的原理<p>\r\n<p>https://github.com/whde/ResumeFromBreakPoint 为对应的Swift断点续传<p>\r\n```objective-c\r\n/*Objective-C*/\r\npod 'BreakPoint', '~> 1.0.1'\r\n```\r\n## WhdeBreakPoint\r\n简单的网络请求队列管理类,简单的管理,不做太多复杂处理\r\n```objective-c\r\n/*创建请求,添加请求到数组中\r\nWhdeSession请求失败,取消请求等需要从数组中移除*/\r\n+ (WhdeSession *)asynDownloadWithUrl:(NSString *)urlStr progressBlock:(ProgressBlock)progress successBlock:(SuccessBlock) success failureBlock:(FailureBlock)failure;\r\n```\r\n```objective-c\r\n/*取消请求,移除数组中对应的请求*/\r\n+ (void)cancel:(NSString *)urlStr;\r\n```\r\n```objective-c\r\n/*暂停,即为取消请求*/\r\n+ (void)pause:(NSString *)urlStr;\r\n```\r\n\r\n## WhdeFileManager\r\n断点续传专用的文件管理\r\n```objective-c\r\n/*根据NSURL获取存储的路径,文件不一定存在\r\n文件名为Url base64转换*/\r\n+ (NSString *)filePath:(NSURL *)url;\r\n```\r\n```objective-c\r\n/*获取对应文件的大小*/\r\n+ (long long)fileSize:(NSURL *)url;\r\n```\r\n```objective-c\r\n/*根据url删除对应的文件*/\r\n+ (BOOL)deleteFile:(NSURL *)url;\r\n```\r\n## WhdeSession\r\n网络收发\r\n```objective-c\r\n/*创建请求,开始下载,设置已经下载的位置*/\r\n+ (instancetype)asynDownloadWithUrl:(NSString *)urlStr progressBlock:(ProgressBlock)progress successBlock:(SuccessBlock) success failureBlock:(FailureBlock)failure callCancelBlock:(CallCancel)callCancel;\r\n```\r\n```objective-c\r\n/*取消下载*/\r\n- (void)cancel;\r\n```\r\n```objective-c\r\n/*暂停下载即为取消下载*/\r\n- (void)pause;\r\n```\r\n```objective-c\r\n/*出现错误,取消请求,通知失败*/\r\n- (void)URLSession:(NSURLSession *)session didBecomeInvalidWithError:(NSError *)error;\r\n```\r\n```objective-c\r\n/*下载完成*/\r\n- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error;\r\n```\r\n```objective-c\r\n/*接收到数据,将数据存储*/\r\n- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask didReceiveData:(NSData *)data {\r\nNSHTTPURLResponse *response = (NSHTTPURLResponse *)dataTask.response;\r\nif (response.statusCode == 200) {\r\n/*无断点续传时候,一直走200*/\r\n_progressBlock(((float)dataTask.countOfBytesReceived)/((float)dataTask.countOfBytesExpectedToReceive), dataTask.countOfBytesReceived, dataTask.countOfBytesExpectedToReceive);\r\n[self save:data];\r\n} else if (response.statusCode == 206) {\r\n/*断点续传后,一直走206*/\r\n_progressBlock((((float)(dataTask.countOfBytesReceived+_startFileSize)/(float)(dataTask.countOfBytesExpectedToReceive+_startFileSize))), dataTask.countOfBytesReceived, dataTask.countOfBytesExpectedToReceive);\r\n[self save:data];\r\n}\r\n}\r\n```\r\n```objective-c\r\n/*存储数据,将offset标到文件末尾,在末尾写入数据,最后关闭文件*/\r\n- (void)save:(NSData *)data \r\n```\r\n# 使用\r\n```objective-c\r\nurlStr = @\"http://dlsw.baidu.com/sw-search-sp/soft/2a/25677/QQ_V4.1.1.1456905733.dmg\";\r\n/*开始下载\r\n继续下载*/\r\n- (IBAction)start:(id)sender {\r\n[WhdeBreakPoint asynDownloadWithUrl:urlStr progressBlock:^(float progress, long long receiveByte, long long allByte) {\r\n_progressView.progress = progress;\r\n_progressLabel.text = [NSString stringWithFormat:@\"%d%%\", (int)(progress*100)];\r\n} successBlock:^(NSString *filePath) {\r\nNSLog(@\"%@\", filePath);\r\n} failureBlock:^(NSString *filePath) {\r\nNSLog(@\"%@\", filePath);\r\n}];\r\n}\r\n\r\n- (IBAction)pause:(id)sender {\r\n[WhdeBreakPoint pause:urlStr];\r\n}\r\n\r\n- (IBAction)delete:(id)sender {\r\n[WhdeFileManager deleteFile:[NSURL URLWithString:urlStr]];\r\n}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}